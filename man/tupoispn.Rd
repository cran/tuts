% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/b_tupoisPN.R
\name{tupoispn}
\alias{tupoispn}
\title{Time-uncertain polynomial regression of counting time series}
\usage{
tupoispn(y, ti.mu, ti.sd, n.sim, polyorder = 3, CV = FALSE, ...)
}
\arguments{
\item{y}{A vector of observations.}

\item{ti.mu}{A vector of estimates of timing of observations.}

\item{ti.sd}{A vector of standard deviations of timing.}

\item{n.sim}{A number of simulations.}

\item{polyorder}{Order of the polynomial regression.}

\item{CV}{cross-validation indicator.}

\item{...}{optional arguments: \cr
- n.chains: number of MCMC chains, the default number of chains is set to 2.\cr
- Thin: thinning factor, the default values is set to 4.\cr
- polyorder: order of the polynomial regression, the default odrer is set to 3. \cr
- n.cores: number of cores used in cross-validation. No value or 'MAX' applies all the available cores in computation.\cr}
}
\description{
\code{tupoispn} performs estimation of parameters of Poisson N-th order polynomial regression of time-uncertain time series.
}
\examples{
# Note: Most of models included in tuts package are computationally intensive. In the example
# below I set parameters to meet CRANâ€™s testing requirement of maximum 5 sec per example.
# A more practical example would contain N=50 in the first line of the code and n.sim=10000.

#1. Import or simulate the data (a simulation is chosen for illustrative purposes):
DATA=simtuts(N=10,Harmonics=c(4,0,0), sin.ampl=c(10,0, 0), cos.ampl=c(0,0,0),
            trend=0,y.sd=2, ti.sd=0.2)
y=DATA$observed$y.obs
y=round(y-min(y))
ti.mu=DATA$observed$ti.obs.tnorm
ti.sd= rep(0.2, length(ti.mu))

#2. Fit the model:
polyorder=2
n.sim=1000
PPN=tupoispn(y=y,ti.mu=ti.mu,ti.sd=ti.sd,polyorder=polyorder,n.sim=n.sim,CV=TRUE,n.cores=2)

#3. Generate summary results (optional parameters are listed in brackets):
summary(PPN)                           # Summary results (burn, CI).

#4. Generate plots and diagnostics of the model (optional parameters are listed in brackets):
plot(PPN,type='predTUTS',CI=0.95)   # One step out of salmple predictions (CI, burn).
plot(PPN,type='cv',burn=0.3)        # 5 fold cross-validation (CI, burn).
plot(PPN,type='GR',CI=0.95)         # Gelman-Rubin diagnostic (CI).
plot(PPN,type='mcmc')               # MCMC diagnostics.
plot(PPN,type='lambda')             # Volatility realizaitons.
}
