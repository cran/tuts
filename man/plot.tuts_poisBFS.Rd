% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/b_tupoisBFS.R
\name{plot.tuts_poisBFS}
\alias{plot.tuts_poisBFS}
\title{Plots and visual diagnostics of tuts_BFS objects}
\usage{
\method{plot}{tuts_poisBFS}(x, type, ...)
}
\arguments{
\item{x}{A tuts_BFS objects.}

\item{type}{plot type with the following options:\cr
- 'periodogram' plots estimates of power spectrum.  \cr
- 'predTUTS' plots one step predictions of the model. \cr
- 'GR' plots Gelman-Rubin diagnostics. \cr
- 'cv' plots 5-fold cross validation. \cr
- 'mcmc' plots diagnostics of MCMC/JAGS objects. \cr
- 'lambda' plots lambda realizations. \cr}

\item{...}{list of optional parameters:\cr
- burn: burn-in parameter ranging from 0 to 0.7 with default value set to 0. \cr
- CI: credible interval ranging from 0.3 to 1 with default value set to 0.95.}
}
\description{
\code{plot.tuts_poisBFS} generates plots and visual diagnostics of tuts_BFS objects.
}
\examples{
# Note: Most of models included in tuts package are computationally intensive. In the example
# below I set parameters to meet CRANâ€™s testing requirement of maximum 5 sec per example.
# A more practical example would contain N=50 in the first line of the code and n.sim=10000.

#1. Import or simulate the data (simulation is chosen for illustrative purposes):
DATA=simtuts(N=7,Harmonics=c(2,0,0), sin.ampl=c(10,0, 0), cos.ampl=c(0,0,0),
            trend=0,y.sd=2, ti.sd=0.2)
y=DATA$observed$y.obs
y=round(y-min(y))
ti.mu=DATA$observed$ti.obs.tnorm
ti.sd= rep(0.2, length(ti.mu))

#2. Fit the model:
n.sim=10
TUPOIS=tupoisbsf(y=y,ti.mu=ti.mu,ti.sd=ti.sd,freqs='internal',n.sim=n.sim,n.chains=2,
                 CV=TRUE,n.cores=2)

#3. Generate plots and diagnostics of the model (optional parameters are listed in brackets):
plot(TUPOIS,type='periodogram')               # spectral analysis (CI, burn).
plot(TUPOIS,type='predTUTS', CI=0.99)         # One step predictions (CI, burn).
plot(TUPOIS,type='cv')                        # 5 fold cross validation (CI, burn).
plot(TUPOIS,type='GR')                        # Gelman-Rubin diagnostics (CI, burn).
plot(TUPOIS,type='mcmc')                      # MCMC diagnostics.
plot(TUPOIS,type='lambda')                    # Realizaitons of lambda.
}
